# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Chat {
  deal: Deal
  id: ID!
  messages: [Message!]
  paticipants: [User!]!
  post: Post
}

input CreateUserInput {
  password: String!
  username: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Deal {
  chat: Chat!
  dateTime: DateTime!
  id: ID!
  proposer: User!
}

type Like {
  id: ID!
  post: Post!
  user: User!
}

type Message {
  chat: Chat!
  createdAt: DateTime!
  id: ID!
  text: String!
  user: User
}

type Mutation {
  createUser(args: CreateUserInput!): String!
  removeUser(id: Float!): Boolean!
  setLocation(latitude: Float!, longitude: Float!): User!
  updateAvatar(avatar: String!): User!
}

type Post {
  category: PostCategoryEnum!
  chats: [Chat!]
  createdAt: DateTime!
  descrioption: String!
  id: ID!
  likes: [Like!]
  pictures: [String!]!
  reviews: [Review!]
  status: PostStatusEnum!
  title: String!
  user: User!
  viewCount: Float!
}

enum PostCategoryEnum {
  Beauty
  Digital
  Fashion
  Funiture
  Living
  Others
  Pet
  Sports
}

enum PostStatusEnum {
  Hidden
  OnSale
  SoldOut
}

type Query {
  getUserProfile(id: Float!): User!
  logIn(password: String!, username: String!): String!
  users: [User!]!
  whoAmI: User!
}

type Review {
  createdAt: DateTime!
  id: ID!
  post: Post!
  rating: Float!
  recipient: User!
  text: String!
  writer: User
  writerType: WriterTypeEnum!
}

type User {
  avatar: String
  chats: [Chat!]
  dealsAsPropser: [Deal!]
  id: ID!
  latitude: Float!
  likes: [Like!]
  longitude: Float!
  messages: [Message!]
  password: String!
  posts: [Post!]
  reviewsAsRecipient: [Review!]
  reviewsAsWriter: [Review!]
  username: String!
}

enum WriterTypeEnum {
  Buyer
  Seller
}
